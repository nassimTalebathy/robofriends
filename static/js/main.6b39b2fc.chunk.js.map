{"version":3,"sources":["components/Card.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["LETTERS","Card","name","username","email","id","rnd_num","Array","fill","map","x","length","Math","random","round","substring","join","randomLetters","className","src","alt","SearchBox","placeholder","type","onChange","this","props","React","Component","style","overflowY","border","height","Scroll","children","ErrorBoundary","state","hasError","error","info","setState","App","handleChange","event","searchText","target","value","componentDidMount","fetch","then","response","ms","date","Date","now","currentDate","sleep","json","users","robots","inputs","r","filteredArray","filter","toLowerCase","includes","comp","toCardArray","throwError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b39b2fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst LETTERS = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\nconst randomLetters = (n=3) => {\r\n    var rnd_num = Array(n).fill().map( x => LETTERS.length * Math.random());\r\n    rnd_num = rnd_num.map(Math.round);\r\n    var rnd_let = rnd_num.map(x => LETTERS.substring(x, x+1));\r\n    return rnd_let.join('');\r\n}\r\n\r\nconst Card = ({name, username, email, id}) => {\r\n    let rnd_letters = randomLetters(14);\r\n    return (\r\n        // br -> border\r\n        // pa -> padding\r\n        // ma -> margin\r\n        // grow -> animation\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow shadow-5 bw2\">\r\n            <img src={'https://robohash.org/' + id + '?200x200'} alt=''/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{username}: {email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nclass SearchBox extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Search-box tc ma3\">\r\n                <input placeholder=\"Got friends?\" type='search'\r\n                    onChange={this.props.onChange}\r\n                ></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst style = {\r\n    overflowY: 'scroll',\r\n    border: '3px solid black',\r\n    height: '800px',\r\n};\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div className=\"Scroll\" style={style}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <p>Error!</p>;\r\n        }        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react';\r\nimport Card from '../components/Card';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n\r\nfunction sleep(ms) {\r\n    const date = Date.now();\r\n    let currentDate = null;\r\n    do {\r\n        currentDate = Date.now()\r\n    } while (currentDate - date < ms);\r\n}\r\n\r\nconst USER_LINK = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            robots: [],\r\n            searchText: ''\r\n        };\r\n    }\r\n\r\n    toCardArray(inputs) {\r\n        return inputs.map((r) => {\r\n            return (<Card\r\n                key={r.id} id={r.id}\r\n                name={r.name}\r\n                email={r.email}\r\n                username={r.username}\r\n            />);\r\n        });\r\n    }\r\n\r\n    // Custom methods must use this syntax\r\n    // so that `this` refers to App\r\n    handleChange = (event) => {\r\n        this.setState({ searchText: event.target.value });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(USER_LINK)\r\n            .then(response => {\r\n                sleep(1000);\r\n                return response.json();\r\n            })\r\n            .then(users => this.setState({ robots: users }))\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchText} = this.state;\r\n\r\n        var filteredArray = robots.filter(x =>\r\n            (x.name.toLowerCase().includes(searchText.toLowerCase()))\r\n        );\r\n        var comp = filteredArray.length ? \r\n            (\r\n                <div className=\"card-list\">\r\n                    {this.toCardArray(filteredArray)}\r\n                </div>\r\n            ) : \r\n            (\r\n                <h1 className=\"grow tc br3 ma3\">Loading</h1>\r\n            );\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <nav className=\"nav-bar tc\">\r\n                    <h1 className=\"dib br3 ma3 pa1\">RoboFriends</h1>\r\n                </nav>\r\n                <br></br>\r\n                <div>\r\n                    <SearchBox\r\n                        onChange={(x) => this.handleChange(x)}\r\n                    />\r\n                </div>\r\n                <br></br>\r\n                <Scroll>\r\n                    {/* everything inside here is passed to scroll as props.children */}\r\n                    <ErrorBoundary>\r\n                        {comp}\r\n                        {this.throwError()}\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    throwError(){\r\n        // throw new Error('NOOOO');\r\n        return ;\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}